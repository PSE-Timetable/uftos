name: Deploy

on:
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest
    strategy:
      # Prevent a failure in one image from stopping the other builds
      fail-fast: false
      matrix:
        include:
          - image: uftos-api
            context: .
            file: server/Dockerfile
            platforms: linux/amd64,linux/arm64
            device: cpu
          - image: immich-web
            context: .
            file: web/Dockerfile
            platforms: linux/amd64,linux/arm64
            device: cpu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/${{matrix.image}}
            name=pse-timetable/${{matrix.image}},enable=${{ github.event_name == 'release' }}
          tags: |
            # Tag with git tag on release
            type=ref,event=tag
            type=raw,value=release,enable=${{ github.event_name == 'release' }}

      - name: Determine build cache output
        id: cache-target
        run: |
          echo "cache-to=type=registry,mode=max,ref=ghcr.io/pse-timetable/uftos-build-cache:${{ matrix.image }}" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v6.7.0
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          platforms: ${{ matrix.platforms }}
          # Skip pushing when PR from a fork
          push: true
          cache-from: type=registry,ref=ghcr.io/pse-timetable/uftos-build-cache:${{matrix.image}}
          cache-to: ${{ steps.cache-target.outputs.cache-to }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            DEVICE=${{ matrix.device }}
            BUILD_ID=${{ github.run_id }}
            BUILD_IMAGE=${{ github.event_name == 'release' && github.ref_name || steps.metadata.outputs.tags }}
            BUILD_SOURCE_REF=${{ github.ref_name }}
            BUILD_SOURCE_COMMIT=${{ github.sha }}
